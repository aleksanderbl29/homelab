---
services:
  traefik:
    image: traefik:v3.4.1
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
      - media
    ports:
      - 80:80
      - 443:443
      # - 8080:8080
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      # - CF_DNS_API_TOKEN=YOUR_API_TOKEN
      - CF_API_KEY=${CF_API_KEY}
      ## be sure to use the correct one depending on if you are using a token or key
      # - api.insecure=true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ../traefik/data/traefik.yml:/traefik.yml
      - ../traefik/data/acme.json:/acme.json
      - ../traefik/data/config.yml:/config.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik-dashboard.local.aleksanderbl.dk`)"
      # - "traefik.http.middlewares.traefik-auth.basicauth.users=${BASIC_AUTH}"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik-dashboard.local.aleksanderbl.dk`)"
      # - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=local.aleksanderbl.dk"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.local.aleksanderbl.dk"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "com.centurylinklabs.watchtower.monitor-only=true"

  portainer:
    image: portainer/portainer-ee:2.31.0
    command: -H unix:///var/run/docker.sock
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - proxy
    security_opt:
      - no-new-privileges:true
    ports:
      # - 9000:9000
      - 9443:9443
    labels:
      traefik.enable: true
      traefik.http.routers.portainer.rule: Host(`portainer.local.aleksanderbl.dk`)
      traefik.http.routers.portainer.entrypoints: http
      traefik.http.middlewares.portainer-https-redirect.redirectscheme.scheme: https
      traefik.http.routers.portainer.middlewares: portainer-https-redirect
      traefik.http.routers.portainer-secure.entrypoints: https
      traefik.http.routers.portainer-secure.rule: Host(`portainer.local.aleksanderbl.dk`)
      traefik.http.routers.portainer-secure.tls: true
      traefik.http.routers.portainer-secure.service: portainer
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      traefik.docker.network: proxy
      com.centurylinklabs.watchtower.monitor-only: true

networks:
  proxy:
    external: true
  media:
    external: true

volumes:
  portainer_data:
    external: true
